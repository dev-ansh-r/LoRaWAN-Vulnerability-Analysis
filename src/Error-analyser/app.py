import json

def analyze_uplink_message(uplink_message):
    suggestions = []

    # Example: Check RSSI, SNR, and firmware values
    rssi_threshold = -80
    snr_threshold = 5
    threshold_major_version = 2

    rssi = uplink_message['uplink_message']['rx_metadata'][0]['rssi']
    snr = uplink_message['uplink_message']['rx_metadata'][0]['snr']
    firmware_version = uplink_message['uplink_message']['version_ids']['hardware_version']
    major_version = int(firmware_version.split('.')[0])

    if rssi < rssi_threshold:
        suggestions.append("Low RSSI: Device may be too far from the gateway.")
    if snr < snr_threshold:
        suggestions.append("Low SNR: Possible interference or signal quality issues.")
    if major_version < threshold_major_version:
        suggestions.append("Outdated Firmware: Consider updating for security and feature improvements.")

    # Add more checks based on your specific use case
    return suggestions

# Example: Read uplink JSON data from a file
with open('../.././Data/bad-uplink-message.json', 'r') as file: # Change this path to your file
    uplink_data = json.load(file)

# Example: Analyze the uplink message
suggestions = analyze_uplink_message(uplink_data)

# Example: Display suggestions
if suggestions:
    print("Possible User Errors:")
    for suggestion in suggestions:
        print("- {}".format(suggestion))
else:
    print("No apparent issues detected.")
